// <auto-generated />
using System;
using Data.Contex;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace NextSenseProduktCatalog.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241009192730_RenameOrderIDToID")]
    partial class RenameOrderIDToID
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Data.Entities.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("OrderDate")
                        .HasDatabaseName("IX_Order_OrderDate");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Data.Entities.OrderDetail", b =>
                {
                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderID", "ProductID");

                    b.HasIndex("ProductID");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Data.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Manufacturer = "Dell",
                            Name = "Laptop",
                            Price = 1000.00m
                        },
                        new
                        {
                            ID = 2,
                            Manufacturer = "Samsung",
                            Name = "Smartphone",
                            Price = 800.00m
                        },
                        new
                        {
                            ID = 3,
                            Manufacturer = "Sony",
                            Name = "Headphones",
                            Price = 150.00m
                        },
                        new
                        {
                            ID = 4,
                            Manufacturer = "Apple",
                            Name = "Smartwatch",
                            Price = 250.00m
                        },
                        new
                        {
                            ID = 5,
                            Manufacturer = "Dell",
                            Name = "Monitor",
                            Price = 300.00m
                        },
                        new
                        {
                            ID = 6,
                            Manufacturer = "Dell",
                            Name = "Keyboard",
                            Price = 50.00m
                        },
                        new
                        {
                            ID = 7,
                            Manufacturer = "Dell",
                            Name = "Mouse",
                            Price = 40.00m
                        },
                        new
                        {
                            ID = 8,
                            Manufacturer = "Apple",
                            Name = "Tablet",
                            Price = 500.00m
                        },
                        new
                        {
                            ID = 9,
                            Manufacturer = "Samsung",
                            Name = "External Hard Drive",
                            Price = 120.00m
                        },
                        new
                        {
                            ID = 10,
                            Manufacturer = "Sony",
                            Name = "Printer",
                            Price = 200.00m
                        });
                });

            modelBuilder.Entity("Data.Entities.OrderDetail", b =>
                {
                    b.HasOne("Data.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Data.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Data.Entities.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
